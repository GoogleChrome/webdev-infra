.aside {
  --gutter: 0.5rem;

  @extend .flow;

  padding: $global-gutter;
  border-radius: $global-radius-large;

  @include apply-utility('bg', 'mid-bg'); // For if no BG utility is added

  a {
    color: currentColor;
    text-decoration-color: currentColor;

    &:focus {
      outline-color: currentColor;
    }
  }

  &__icon,
  svg {
    width: 1.2em;
    height: 1.2em;
  }

  /// Blocks usually shouldn't control spacing, but
  /// the aside is often found in `.flow` contexts
  /// so we need to make sure the space above and below
  /// is consistent
  &,
  & + * {
    @include apply-utility('flow-space', 'size-2');
  }

  /// Now, we want to make sure all spacing inside the
  /// element stays consistent too
  > * {
    @include apply-utility('flow-space', 'base');
  }

  &--caution {
    --link-color: var(--color-yellow-darkest);
    --link-visited-color: var(--color-yellow-darkest);
    --link-rgb-background: var(--rgb-yellow-darkest);
    background-color: var(--color-yellow-lightest);
    color: var(--color-yellow-darkest);
  }

  &--warning {
    --link-color: var(--color-red-darkest);
    --link-visited-color: var(--color-red-darkest);
    --link-rgb-background: var(--rgb-red-darkest);
    background-color: var(--color-red-lightest);
    color: var(--color-red-darkest);
  }

  &--success {
    --link-color: var(--color-green-darkest);
    --link-visited-color: var(--color-green-darkest);
    --link-rgb-background: var(--rgb-green-darkest);
    background-color: var(--color-green-lightest);
    color: var(--color-green-darkest);
  }

  &--important {
    --link-color: var(--color-purple-darkest);
    --link-visited-color: var(--color-purple-darkest);
    --link-rgb-background: var(--rgb-purple-darkest);
    background-color: var(--color-purple-lightest);
    color: var(--color-purple-darkest);
  }

  &--key-term {
    --link-color: var(--color-pink-darkest);
    --link-visited-color: var(--color-pink-darkest);
    --link-rgb-background: var(--rgb-pink-darkest);
    background-color: var(--color-pink-lightest);
    color: var(--color-pink-darkest);
  }

  &--codelab,
  &--example {
    --link-color: var(--color-cyan-darkest);
    --link-visited-color: var(--color-cyan-darkest);
    --link-rgb-background: var(--rgb-cyan-darkest);
    background-color: var(--color-cyan-lightest);
    color: var(--color-cyan-darkest);
  }
}
